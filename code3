// C++ program for the above approach 
  
#include <bits/stdc++.h> 
using namespace std; 
  
int getNumberK(vector<int>& S) 
{ 
    // vector to store freq. 
    vector<int> freq(S.size() + 1, 
                     0); 
  
    // Filling freq vector. 
    for (int i = 0; i < S.size(); 
         i++) { 
  
        if (S[i] < S.size()) 
            freq[S[i]]++; 
        else
            freq[S.size()]++; 
    } 
  
    int total = 0; 
  
    // Finding K number. 
    for (int i = S.size(); i >= 0; 
         i--) { 
  
        total += freq[i]; 
        if (total >= i) 
            return i; 
    } 
  
    // No K number found. 
    return 0; 
} 
  
// Driver code 
int main() 
{ 
    vector<int> arr{ 3, 0, 6, 1, 5 }; 
    cout << getNumberK(arr) << '\n'; 
    return 0; 
} 
